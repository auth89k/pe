# -*- coding: utf-8 -*-
"""
Created on Thu Feb 13 09:30:08 2020

@author: yhkwon
"""

import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.font_manager as fm
import numpy as np
from sklearn.model_selection import train_test_split

#font 설정
font_path = "c:\\Windows\Fonts\malgun.ttf"
font_name=fm.FontProperties(fname=font_path).get_name()
plt.rcParams['font.family']=font_name

## Prepare dataset
dataset = pd.read_excel('ipm_final.xlsx')

dataset=dataset.drop(columns=['O/B', 'I/B'])
dataset=dataset[(dataset['노출']!=0) & (dataset['클릭']!=0)]
dataset=dataset.reset_index(drop=True)

df=dataset
df["일자"]=df["일자"].astype(str)
idx=df["일자"].str.contains('2018|2019')
df=df.loc[idx]

df=df.drop(columns=['IPM 키워드',"CTR", "CPC", "CPR"])
df["일자"]=df["일자"].astype('datetime64[ns]')

df=df.groupby(['일자'], as_index=False).sum()
df=df.rename(columns={"일자":"DATE","노출":"SHOW","클릭":"CLICK","비용":"COST","O/B+I/B":"GOAL"})
df=df.set_index("DATE")
df=df[:].astype(np.float)
df["CPR"]=df["GOAL"]/df["CLICK"]
#df=df.drop(columns=["SHOW","GOAL"])
df=df.drop(columns=["SHOW","CLICK","GOAL"])

new_df=df.sort_values(by='COST', ascending=True)
new_df=new_df.reset_index(drop=True)
new_df["IDX"]=new_df.index

#CREATE VAR
new_df["NUMERATOR"]=0
new_df["DENOMINATOR"]=0
new_df["PE"]=0
new_df["PE_CENTER"]=0

#new_df.iloc[0][0]

for i in range(0,len(new_df)):
    if new_df.iloc[i][2]==0:
        print("Price Elasticity first row")
        new_df.loc[i,'PE']=0
        new_df.loc[i,'PE_CENTER']=0
    else:
        #PE
        numerator=(new_df.iloc[i-1][0]-new_df.iloc[i][0])/new_df.iloc[i-1][0]
        new_df.loc[i,'NUMERATOR']=numerator
        if (new_df.iloc[i-1][1]-new_df.iloc[i][1]) !=0:
            denominator=(new_df.iloc[i-1][1]-new_df.iloc[i][1])/new_df.iloc[i-1][1]
            new_df.loc[i,'DENOMINATOR']=denominator
            new_df.loc[i,'PE']=numerator/denominator
            #PE_CENTER
            numerator2=(new_df.iloc[i-1][0]-new_df.iloc[i][0])/(new_df.iloc[i-1][0]+new_df.iloc[i][0])
            denominator2=(new_df.iloc[i-1][1]-new_df.iloc[i][1])/(new_df.iloc[i-1][1]+new_df.iloc[i][1])
            new_df.loc[i,'PE_CENTER']=numerator2/denominator2
        else:
            new_df.loc[i,'PE']=0
            new_df.loc[i,'PE_CENTER']=0

plt.figure(figsize=(15,15))
new_df.plot(kind='line',x="COST",y="PE")
new_df["PE"][1:].plot()
new_df.to_excel('aa.xlsx')

from ipywidgets import interact
import seaborn as sns

#분포 확인
def lm_plot(x):
    sns.lmplot(x="COST",
               y="PE",
               data=new_df,
               order=x,
               line_kws={'color':"red"},
               scatter_kws={'edgecolor':"white"})

interact(lm_plot, x=2)
